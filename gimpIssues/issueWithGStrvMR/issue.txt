
Attached is a diff (on the MR branch) that fixes the issue I described earlier.

Now I will describe the cause of the issue.
On the wire, a GStrv should be represented by:  string-count [char-count [char]*]*  ,
where * means zero or more.
Note that you always must write the string-count, even for an empty array.
That is a problem with the original code in the MR, it doesn't always write the string-count to the wire
(yet the wire reader side expects it.)

(It still baffles me why it was crashing when you enter "zz" in the text box for Procedure Browser,
since that should return one procedure name, "script-fu-fuzzy-border", i.e. not an empty GStrv.)

Now I will describe how I am testing with the diff in place:
- Procedure Browser doesn't crash for "zz"
- a test plugin in Python receives a GStrv from a call to gimp-pdb-query, and it is correctly bound to a Python iterable
- a test plugin in Python can call a PDB procedure that takes a GStrv, and it correcly crosses the wire.

The latter test is failing, probably because I don't understand
how in Python using GI, to create a GValue holding a GStrv from a Python list of strings.
Note I am trying to call the only PDB procedure that takes a GStrv, file-gih-save.
* I would appreciate any help. *

Note that ScriptFu (and the old GimpFu) have no support (and never had)
for declaring a plugin/PDB procedure taking an parameter of string array type (was GimpStringArray, now is GStrv.)
In other words there is no ScriptFu constant "SF_STRING_ARRAY".
This is not an issue for plugins using GI.
